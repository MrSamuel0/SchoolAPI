// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using School.Data;

#nullable disable

namespace School.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20250703211403_SchoolMigration")]
    partial class SchoolMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("School.Models.SchoolReportModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("SchoolClass")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("SchoolGradesId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SchoolName")
                        .HasColumnType("longtext");

                    b.Property<string>("SchoolYear")
                        .HasColumnType("longtext");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("SchoolGradesId");

                    b.HasIndex("StudentId");

                    b.ToTable("SchoolReport");
                });

            modelBuilder.Entity("School.Models.SchoolSubjectsModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Biology")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Chemistry")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("English")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Geography")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("History")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Math")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Physics")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Portuguese")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("SchoolSubjects");
                });

            modelBuilder.Entity("School.Models.StudentModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("School.Models.TeacherModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("School.Models.SchoolReportModel", b =>
                {
                    b.HasOne("School.Models.SchoolSubjectsModel", "SchoolGrades")
                        .WithMany()
                        .HasForeignKey("SchoolGradesId");

                    b.HasOne("School.Models.StudentModel", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SchoolGrades");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
